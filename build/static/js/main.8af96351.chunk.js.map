{"version":3,"sources":["components/Switches.js","components/GraphicCard.js","components/SimpleTable.js","components/Timer.js","components/GcOne.js","Images/Nvidia_(logo).svg","Images/AMD_Logo_2.svg","App.js","reportWebVitals.js","index.js"],"names":["Switches","handleChange","style","display","alignItems","color","fontWeight","Switch","onChange","name","inputProps","GraphicCard","React","memo","status","image","link","price","className","target","rel","href","src","alt","SimpleTable","data","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","element","scope","gc","Timer","useState","value","setValue","date","Date","now","onComplete","uuidv4","GcOne","setData","viewDetailed","setViewDetailed","useEffect","fetchData","a","axios","get","result","interval","setInterval","clearInterval","e","App","property","setProperty","id","event","includes","defaultValue","nvidia","amd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAGe,SAASA,EAAT,GAAqC,IAAjBC,EAAgB,EAAhBA,aACjC,OACE,sBAAKC,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAA3C,UACE,oBAAIF,MAAO,CAAEG,MAAO,UAAWC,WAAY,QAA3C,yBACA,cAACC,EAAA,EAAD,CACEC,SAAUP,EACVQ,KAAK,WACLC,WAAY,CAAE,aAAc,2BCRpC,IAeeC,EAfKC,IAAMC,MAAK,YAA2C,IAAxCJ,EAAuC,EAAvCA,KAAMK,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3D,OACE,mBAAGC,UAAU,SAASC,OAAO,SAASC,IAAI,aAAaC,KAAML,EAA7D,SACE,sBAAKE,UAAU,OAAf,UACE,6BAAKT,IACL,mBAAGS,UAAsB,YAAXJ,EAAuB,WAAa,aAAlD,SACGA,IAEH,qBAAKI,UAAU,QAAQI,IAAKP,EAAOQ,IAAKd,IACxC,mBAAGS,UAAU,QAAb,SAAsBD,Y,wDCFf,SAASO,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OACE,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,aAAW,eAAlB,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2BACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,oBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,0BAGJ,cAACC,EAAA,EAAD,UACGV,EAAKW,KAAI,SAACC,GAAD,OACR,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWN,UAAU,KAAKW,MAAM,MAAhC,SACGD,EAAQE,KAEX,cAACN,EAAA,EAAD,CACEf,UAA8B,YAAnBmB,EAAQvB,QAAwB,WAC3CoB,MAAM,QAFR,SAIGG,EAAQvB,SAEX,cAACmB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAQpB,QAClC,cAACgB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,mBAAGf,OAAO,SAASC,IAAI,aAAaC,KAAMgB,EAAQrB,KAAlD,SACE,qBACEE,UAAU,cACVI,IAAKe,EAAQtB,MACbQ,IAAKc,EAAQtB,cAhBNsB,EAAQE,c,oBCnBpB,SAASC,IAAS,IAAD,EACJC,mBAAS,GADL,mBACvBC,EADuB,KAChBC,EADgB,KAG9B,OACE,qBAAIzB,UAAU,cAAd,8BACoB,GAClB,sBAAMA,UAAU,QAAhB,SACE,cAAC,IAAD,CAEE0B,KAAMC,KAAKC,MAAQ,IACnBC,WAAY,kBAAMJ,EAASK,iBAFtBN,QC8CAO,MAjDf,YAA2B,IAAVP,EAAS,EAATA,MAAS,EACAD,mBAAS,MADT,mBACjBhB,EADiB,KACXyB,EADW,OAEgBT,oBAAS,GAFzB,mBAEjBU,EAFiB,KAEHC,EAFG,KAqBxB,OAbAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAI,IAAMf,GADrB,OACVgB,EADU,OAGhBR,EAAQQ,EAAOjC,MAHC,2CAAH,qDAKf6B,IACA,IAAMK,EAAWC,aAAY,WAC3BN,MACC,KACH,OAAO,kBAAMO,cAAcF,MAC1B,CAACjB,IAGF,sBAAKxB,UAAU,MAAf,UACE,qBAAIA,UAAU,QAAd,kBAA4BwB,EAA5B,gBACA,sBAAKxB,UAAU,kBAAf,UACE,cAACsB,EAAD,IACA,cAACxC,EAAD,CAAUC,aAtBK,WACnBmD,GAAiBD,SAuBbA,EAGA,qBAAKjC,UAAU,YAAf,SACGO,GACCA,EAAKW,KAAI,SAAC0B,GAAD,OACP,cAAC,EAAD,CAEErD,KAAMqD,EAAEvB,GACRzB,OAAQgD,EAAEhD,OACVC,MAAO+C,EAAE/C,MACTC,KAAM8C,EAAE9C,KACRC,MAAO6C,EAAE7C,OALJ+B,oBANbvB,GAAQ,cAACD,EAAD,CAAaN,UAAU,QAAQO,KAAMA,QCtCtC,MAA0B,0CCA1B,MAA0B,uCC+C1BsC,MAxCf,WAAgB,IAAD,EACatB,mBAAS,QADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,mBAAS,UAF5B,mBAENuB,EAFM,KAEIC,EAFJ,KAab,OACE,sBAAK/C,UAAU,MAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,yBACET,KAAK,KACLyD,GAAG,cACHhD,UAAU,cACVV,SAhBa,SAAC2D,GACpBxB,EAASwB,EAAMhD,OAAOuB,OAClByB,EAAMhD,OAAOuB,MAAM0B,SAAS,MAC9BH,EAAY,OAEZA,EAAY,WAOV,UAME,wBAAQI,aAAa,OAArB,kBACA,wBAAQ3B,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,uBAEF,qBAAKxB,UAAU,kBAAf,SACgB,WAAb8C,EACC,qBAAK9C,UAAU,aAAaK,IAAI,UAAUD,IAAKgD,IAE/C,qBAAKpD,UAAU,aAAaK,IAAI,UAAUD,IAAKiD,SAIrD,cAAC,EAAD,CAAO7B,MAAOA,QC9BL8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8af96351.chunk.js","sourcesContent":["import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport default function Switches({ handleChange }) {\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <h2 style={{ color: \"#D367C1\", fontWeight: \"bold\" }}>Toggle view</h2>\n      <Switch\n        onChange={handleChange}\n        name=\"checkedA\"\n        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst GraphicCard = React.memo(({ name, status, image, link, price }) => {\n  return (\n    <a className=\"gclink\" target=\"_blank\" rel=\"noreferrer\" href={link}>\n      <div className=\"card\">\n        <h3>{name}</h3>\n        <p className={status !== \"Rupture\" ? \"en-stock\" : \"en-rupture\"}>\n          {status}\n        </p>\n        <img className=\"image\" src={image} alt={name} />\n        <p className=\"price\">{price}</p>\n      </div>\n    </a>\n  );\n});\n\nexport default GraphicCard;\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport default function SimpleTable({ data }) {\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Graphic Card</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell align=\"right\">Price</TableCell>\n            <TableCell align=\"right\">Picture</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((element) => (\n            <TableRow key={element.gc}>\n              <TableCell component=\"th\" scope=\"row\">\n                {element.gc}\n              </TableCell>\n              <TableCell\n                className={element.status !== \"Rupture\" && \"en-stock\"}\n                align=\"right\"\n              >\n                {element.status}\n              </TableCell>\n              <TableCell align=\"right\">{element.price}</TableCell>\n              <TableCell align=\"right\">\n                <a target=\"_blank\" rel=\"noreferrer\" href={element.link}>\n                  <img\n                    className=\"table-image\"\n                    src={element.image}\n                    alt={element.image}\n                  />\n                </a>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Countdown from \"react-countdown\";\n\nexport default function Timer() {\n  const [value, setValue] = useState(0);\n\n  return (\n    <h2 className=\"title-timer\">\n      Next refresh in: {\"\"}\n      <span className=\"timer\">\n        <Countdown\n          key={value}\n          date={Date.now() + 900000}\n          onComplete={() => setValue(uuidv4())}\n        />\n      </span>\n    </h2>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport Switches from \"./Switches\";\nimport GraphicCard from \"./GraphicCard\";\nimport SimpleTable from \"./SimpleTable\";\nimport Timer from \"./Timer\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction GcOne({ value }) {\n  const [data, setData] = useState(null);\n  const [viewDetailed, setViewDetailed] = useState(false);\n\n  const handleChange = () => {\n    setViewDetailed(!viewDetailed);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get(\"/\" + value);\n      // console.log(result.data);\n      setData(result.data);\n    };\n    fetchData();\n    const interval = setInterval(() => {\n      fetchData();\n    }, 900000);\n    return () => clearInterval(interval);\n  }, [value]);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">LDLC {value} G.C stock</h1>\n      <div className=\"flex-container2\">\n        <Timer />\n        <Switches handleChange={handleChange} />\n      </div>\n      {!viewDetailed ? (\n        data && <SimpleTable className=\"table\" data={data} />\n      ) : (\n        <div className=\"container\">\n          {data &&\n            data.map((e) => (\n              <GraphicCard\n                key={uuidv4()}\n                name={e.gc}\n                status={e.status}\n                image={e.image}\n                link={e.link}\n                price={e.price}\n              />\n            ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GcOne;\n","export default __webpack_public_path__ + \"static/media/Nvidia_(logo).23a711a7.svg\";","export default __webpack_public_path__ + \"static/media/AMD_Logo_2.1b747413.svg\";","import { useState } from \"react\";\nimport GcOne from \"./components/GcOne\";\nimport nvidia from \"./Images/Nvidia_(logo).svg\";\nimport amd from \"./Images/AMD_Logo_2.svg\"\n\nimport \"./App.css\";\n\nfunction App() {\n  const [value, setValue] = useState(\"3080\");\n  const [property, setProperty] = useState(\"nvidia\");\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n    if (event.target.value.includes(\"68\")) {\n      setProperty(\"amd\");\n    } else {\n      setProperty(\"nvidia\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"flex-container\">\n        <select\n          name=\"gc\"\n          id=\"gc-selector\"\n          className=\"gc-selector\"\n          onChange={handleChange}\n        >\n          <option defaultValue=\"3080\">3080</option>\n          <option value=\"3090\">3090</option>\n          <option value=\"6800\">6800</option>\n          <option value=\"6800xt\">6800xt</option>\n        </select>\n        <div className=\"image-container\">\n          {property === \"nvidia\" ? (\n            <img className=\"main-image\" alt=\"gc-logo\" src={nvidia} />\n          ) : (\n            <img className=\"main-image\" alt=\"gc-logo\" src={amd} />\n          )}\n        </div>\n      </div>\n      <GcOne value={value} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}